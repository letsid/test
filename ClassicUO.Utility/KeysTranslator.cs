using System.Collections.Generic;
using System.Text;
using SDL2;

namespace ClassicUO.Utility;

internal static class KeysTranslator
{
	private static readonly Dictionary<SDL.SDL_Keycode, string> _keys = new Dictionary<SDL.SDL_Keycode, string>
	{
		{
			SDL.SDL_Keycode.SDLK_UNKNOWN,
			"None"
		},
		{
			SDL.SDL_Keycode.SDLK_BACKSPACE,
			"Backspace"
		},
		{
			SDL.SDL_Keycode.SDLK_TAB,
			"Tab"
		},
		{
			SDL.SDL_Keycode.SDLK_RETURN,
			"Return"
		},
		{
			SDL.SDL_Keycode.SDLK_ESCAPE,
			"Esc"
		},
		{
			SDL.SDL_Keycode.SDLK_SPACE,
			"Space"
		},
		{
			SDL.SDL_Keycode.SDLK_EXCLAIM,
			"!"
		},
		{
			SDL.SDL_Keycode.SDLK_DOLLAR,
			"$"
		},
		{
			SDL.SDL_Keycode.SDLK_PERCENT,
			"%"
		},
		{
			SDL.SDL_Keycode.SDLK_QUOTE,
			"'"
		},
		{
			SDL.SDL_Keycode.SDLK_ASTERISK,
			"*"
		},
		{
			SDL.SDL_Keycode.SDLK_PLUS,
			"+"
		},
		{
			SDL.SDL_Keycode.SDLK_COMMA,
			","
		},
		{
			SDL.SDL_Keycode.SDLK_MINUS,
			"-"
		},
		{
			SDL.SDL_Keycode.SDLK_PERIOD,
			"."
		},
		{
			SDL.SDL_Keycode.SDLK_SLASH,
			"/"
		},
		{
			SDL.SDL_Keycode.SDLK_0,
			"0"
		},
		{
			SDL.SDL_Keycode.SDLK_1,
			"1"
		},
		{
			SDL.SDL_Keycode.SDLK_2,
			"2"
		},
		{
			SDL.SDL_Keycode.SDLK_3,
			"3"
		},
		{
			SDL.SDL_Keycode.SDLK_4,
			"4"
		},
		{
			SDL.SDL_Keycode.SDLK_5,
			"5"
		},
		{
			SDL.SDL_Keycode.SDLK_6,
			"6"
		},
		{
			SDL.SDL_Keycode.SDLK_7,
			"7"
		},
		{
			SDL.SDL_Keycode.SDLK_8,
			"8"
		},
		{
			SDL.SDL_Keycode.SDLK_9,
			"9"
		},
		{
			SDL.SDL_Keycode.SDLK_COLON,
			":"
		},
		{
			SDL.SDL_Keycode.SDLK_SEMICOLON,
			";"
		},
		{
			SDL.SDL_Keycode.SDLK_LESS,
			"<"
		},
		{
			SDL.SDL_Keycode.SDLK_EQUALS,
			"="
		},
		{
			SDL.SDL_Keycode.SDLK_GREATER,
			">"
		},
		{
			SDL.SDL_Keycode.SDLK_QUESTION,
			"?"
		},
		{
			SDL.SDL_Keycode.SDLK_LEFTBRACKET,
			"["
		},
		{
			SDL.SDL_Keycode.SDLK_BACKSLASH,
			"\\"
		},
		{
			SDL.SDL_Keycode.SDLK_RIGHTBRACKET,
			"]"
		},
		{
			SDL.SDL_Keycode.SDLK_CARET,
			"-"
		},
		{
			SDL.SDL_Keycode.SDLK_UNDERSCORE,
			"_"
		},
		{
			SDL.SDL_Keycode.SDLK_BACKQUOTE,
			"BACKQUOTE"
		},
		{
			SDL.SDL_Keycode.SDLK_a,
			"A"
		},
		{
			SDL.SDL_Keycode.SDLK_b,
			"B"
		},
		{
			SDL.SDL_Keycode.SDLK_c,
			"C"
		},
		{
			SDL.SDL_Keycode.SDLK_d,
			"D"
		},
		{
			SDL.SDL_Keycode.SDLK_e,
			"E"
		},
		{
			SDL.SDL_Keycode.SDLK_f,
			"F"
		},
		{
			SDL.SDL_Keycode.SDLK_g,
			"G"
		},
		{
			SDL.SDL_Keycode.SDLK_h,
			"H"
		},
		{
			SDL.SDL_Keycode.SDLK_i,
			"I"
		},
		{
			SDL.SDL_Keycode.SDLK_j,
			"J"
		},
		{
			SDL.SDL_Keycode.SDLK_k,
			"K"
		},
		{
			SDL.SDL_Keycode.SDLK_l,
			"L"
		},
		{
			SDL.SDL_Keycode.SDLK_m,
			"M"
		},
		{
			SDL.SDL_Keycode.SDLK_n,
			"N"
		},
		{
			SDL.SDL_Keycode.SDLK_o,
			"O"
		},
		{
			SDL.SDL_Keycode.SDLK_p,
			"P"
		},
		{
			SDL.SDL_Keycode.SDLK_q,
			"Q"
		},
		{
			SDL.SDL_Keycode.SDLK_r,
			"R"
		},
		{
			SDL.SDL_Keycode.SDLK_s,
			"S"
		},
		{
			SDL.SDL_Keycode.SDLK_t,
			"T"
		},
		{
			SDL.SDL_Keycode.SDLK_u,
			"U"
		},
		{
			SDL.SDL_Keycode.SDLK_v,
			"V"
		},
		{
			SDL.SDL_Keycode.SDLK_w,
			"W"
		},
		{
			SDL.SDL_Keycode.SDLK_x,
			"X"
		},
		{
			SDL.SDL_Keycode.SDLK_y,
			"Y"
		},
		{
			SDL.SDL_Keycode.SDLK_z,
			"Z"
		},
		{
			SDL.SDL_Keycode.SDLK_DELETE,
			"DEL"
		},
		{
			SDL.SDL_Keycode.SDLK_CAPSLOCK,
			"CAPS"
		},
		{
			SDL.SDL_Keycode.SDLK_F1,
			"F1"
		},
		{
			SDL.SDL_Keycode.SDLK_F2,
			"F2"
		},
		{
			SDL.SDL_Keycode.SDLK_F3,
			"F3"
		},
		{
			SDL.SDL_Keycode.SDLK_F4,
			"F4"
		},
		{
			SDL.SDL_Keycode.SDLK_F5,
			"F5"
		},
		{
			SDL.SDL_Keycode.SDLK_F6,
			"F6"
		},
		{
			SDL.SDL_Keycode.SDLK_F7,
			"F7"
		},
		{
			SDL.SDL_Keycode.SDLK_F8,
			"F8"
		},
		{
			SDL.SDL_Keycode.SDLK_F9,
			"F9"
		},
		{
			SDL.SDL_Keycode.SDLK_F10,
			"F10"
		},
		{
			SDL.SDL_Keycode.SDLK_F11,
			"F11"
		},
		{
			SDL.SDL_Keycode.SDLK_F12,
			"F12"
		},
		{
			SDL.SDL_Keycode.SDLK_F20,
			"Mausrad klicken"
		},
		{
			SDL.SDL_Keycode.SDLK_F21,
			"Maus 4"
		},
		{
			SDL.SDL_Keycode.SDLK_F22,
			"Maus 5"
		},
		{
			SDL.SDL_Keycode.SDLK_F23,
			"Maus hoch"
		},
		{
			SDL.SDL_Keycode.SDLK_F24,
			"Maus runter"
		},
		{
			SDL.SDL_Keycode.SDLK_PRINTSCREEN,
			"Drucken"
		},
		{
			SDL.SDL_Keycode.SDLK_SCROLLLOCK,
			"Lock"
		},
		{
			SDL.SDL_Keycode.SDLK_PAUSE,
			"Pause"
		},
		{
			SDL.SDL_Keycode.SDLK_INSERT,
			"Einf"
		},
		{
			SDL.SDL_Keycode.SDLK_HOME,
			"Home"
		},
		{
			SDL.SDL_Keycode.SDLK_PAGEUP,
			"Bild hoch"
		},
		{
			SDL.SDL_Keycode.SDLK_END,
			"Ende"
		},
		{
			SDL.SDL_Keycode.SDLK_PAGEDOWN,
			"Bild runter"
		},
		{
			SDL.SDL_Keycode.SDLK_RIGHT,
			"Rechts"
		},
		{
			SDL.SDL_Keycode.SDLK_LEFT,
			"Links"
		},
		{
			SDL.SDL_Keycode.SDLK_DOWN,
			"Unten"
		},
		{
			SDL.SDL_Keycode.SDLK_UP,
			"Oben"
		},
		{
			SDL.SDL_Keycode.SDLK_KP_DIVIDE,
			"Num/"
		},
		{
			SDL.SDL_Keycode.SDLK_KP_MULTIPLY,
			"Num*"
		},
		{
			SDL.SDL_Keycode.SDLK_KP_MINUS,
			"Num-"
		},
		{
			SDL.SDL_Keycode.SDLK_KP_PLUS,
			"Num+"
		},
		{
			SDL.SDL_Keycode.SDLK_KP_ENTER,
			"NumEnter"
		},
		{
			SDL.SDL_Keycode.SDLK_KP_1,
			"NUM 1"
		},
		{
			SDL.SDL_Keycode.SDLK_KP_2,
			"NUM 2"
		},
		{
			SDL.SDL_Keycode.SDLK_KP_3,
			"NUM 3"
		},
		{
			SDL.SDL_Keycode.SDLK_KP_4,
			"NUM 4"
		},
		{
			SDL.SDL_Keycode.SDLK_KP_5,
			"NUM 5"
		},
		{
			SDL.SDL_Keycode.SDLK_KP_6,
			"NUM 6"
		},
		{
			SDL.SDL_Keycode.SDLK_KP_7,
			"NUM 7"
		},
		{
			SDL.SDL_Keycode.SDLK_KP_8,
			"NUM 8"
		},
		{
			SDL.SDL_Keycode.SDLK_KP_9,
			"NUM 9"
		},
		{
			SDL.SDL_Keycode.SDLK_KP_0,
			"NUM 0"
		},
		{
			SDL.SDL_Keycode.SDLK_KP_PERIOD,
			"Num."
		},
		{
			SDL.SDL_Keycode.SDLK_KP_EQUALS,
			"Num="
		}
	};

	private static readonly Dictionary<SDL.SDL_Keymod, string> _mods = new Dictionary<SDL.SDL_Keymod, string>
	{
		{
			SDL.SDL_Keymod.KMOD_LSHIFT,
			"Shift"
		},
		{
			SDL.SDL_Keymod.KMOD_RSHIFT,
			"R Shift"
		},
		{
			SDL.SDL_Keymod.KMOD_LCTRL,
			"Ctrl"
		},
		{
			SDL.SDL_Keymod.KMOD_RCTRL,
			"R Ctrl"
		},
		{
			SDL.SDL_Keymod.KMOD_LALT,
			"Alt"
		},
		{
			SDL.SDL_Keymod.KMOD_RALT,
			"R Alt"
		}
	};

	public static string TryGetKey(SDL.SDL_Keycode key, SDL.SDL_Keymod mod = SDL.SDL_Keymod.KMOD_NONE)
	{
		if (_keys.TryGetValue(key, out var value))
		{
			StringBuilder stringBuilder = new StringBuilder();
			bool num = (mod & SDL.SDL_Keymod.KMOD_SHIFT) != 0;
			bool flag = (mod & SDL.SDL_Keymod.KMOD_CTRL) != 0;
			bool flag2 = (mod & SDL.SDL_Keymod.KMOD_ALT) != 0;
			if (num)
			{
				stringBuilder.Append("Shift ");
			}
			if (flag)
			{
				stringBuilder.Append("Ctrl ");
			}
			if (flag2)
			{
				stringBuilder.Append("Alt ");
			}
			stringBuilder.Append(value);
			return stringBuilder.ToString();
		}
		return string.Empty;
	}
}
